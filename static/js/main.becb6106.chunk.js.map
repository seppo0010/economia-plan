{"version":3,"sources":["subjectsStatus.tsx","../../main.dot","plan.tsx","dependencyChartData.tsx","acercade_correlatividades.jpg","DependencyChart.tsx","subjectsDifficulty.tsx","DifficultyAssessment.tsx","estimateSubjects.worker.ts","InscriptionRecommendation.tsx","Welcome.tsx","store.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ACTION_TOGGLE","network","getGraphData","a","Promise","resolve","reject","fetch","dotPath","text","dot","parseDOTNetwork","subjectsRect","285","290","288","561","556","289","553","287","557","551","286","283","560","555","552","554","558","559","DependencyChart","checked","useSelector","state","subjectsStatus","dispatch","useDispatch","handleClick","id","type","toggleSubject","useState","graphData","setGraphData","_canDo","subject","toString","has","edges","filter","e","to","map","from","every","requirement","canDo","nodes","viewBox","xmlns","href","acercade_correlatividades","width","height","Object","entries","key","value","x","y","fill","fillOpacity","rx","ry","onClick","cursor","component","Button","ACTION_SET_DIFFICULTY","ACTION_SET_SUBJECTS_PER_CUATRIMESTRE","DifficultyAssessment","subjectsDifficulty","subjectsPerCuatrimestre","updateDifficulty","difficulty","setDifficulty","updateSubjectsPerCuatrimestre","subjectsPerC","setSubjectsPerCuatrimestre","FormControl","variant","style","marginRight","InputLabel","htmlFor","OutlinedInput","required","labelWidth","error","onChange","parseInt","target","Select","labelId","MenuItem","Worker_fn","Worker","LinearProgressWithLabel","props","Box","display","alignItems","mr","LinearProgress","minWidth","Typography","color","Math","round","InscriptionRecommendation","subjects","setSubjects","setEdges","recommendedSubjects","setRecommendedSubjects","progress","setProgress","processing","setProcessing","updatePlan","worker","Date","onmessage","event","data","postMessage","s","fromEntries","sort","e1","e2","n","label","List","quant","ListItem","ListItemText","primary","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","Welcome","rel","rootReducer","combineReducers","Set","action","newState","forEach","c","add","delete","store","createStore","App","className","Container","maxWidth","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.becb6106.chunk.js","sourcesContent":["const ACTION_TOGGLE = 'toggle'\n\nexport function subjectsStatusReducer(state: Set<string> = new Set(), action: any): Set<string> {\n  const newState = new Set<string>()\n  state.forEach((c) => newState.add(c))\n  if (state && action.type === ACTION_TOGGLE) {\n    const {id} = action\n    if (state.has(id)) {\n      newState.delete(id)\n    } else {\n      newState.add(id)\n    }\n    return newState\n  }\n  return newState\n}\n\nexport function toggleSubject(id: string) {\n  return {\n    type: ACTION_TOGGLE,\n    id,\n  }\n}\n","export default __webpack_public_path__ + \"static/media/main.e1c87d53.dot\";","import dotPath from './main.dot'\nimport {parseDOTNetwork} from 'vis-network/standalone'\n\nexport declare interface Node {\n  id: number,\n  label: string,\n}\n\nexport declare interface Edge {\n  from: number,\n  to: number,\n}\n\nexport declare interface GraphData {\n  nodes: Node[],\n  edges: Edge[],\n}\n\nlet network: Promise<GraphData> | null = null;\nexport async function getGraphData(): Promise<GraphData> {\n  if (!network) {\n    network = new Promise(async (resolve, reject) => {\n      const dot = await (await fetch(dotPath)).text()\n      resolve(parseDOTNetwork(dot))\n    })\n  }\n  return network\n}\n\nexport function subjectLength(subject: number | string): number {\n  const s = typeof(subject) === 'string' ? parseInt(subject) : subject\n  return (s === 137 || s === 139) ? 2 : 1\n}\n","import { GraphData } from './plan'\n\nconst subjectsRect = {\n  285: [361, 201, 129, 76],\n  290: [361, 308, 129, 76],\n  288: [361, 560, 129, 76],\n  561: [360, 734, 129, 76],\n  556: [550, 96, 129, 76],\n  289: [509, 376, 129, 76],\n  553: [509, 469, 129, 76],\n  287: [551, 756, 129, 76],\n  557: [550, 860, 129, 76],\n  551: [740, 201, 129, 76],\n  286: [740, 308, 129, 76],\n  283: [740, 614, 129, 76],\n  560: [740, 725, 129, 76],\n  555: [914, 308, 129, 76],\n  552: [914, 414, 129, 76],\n  554: [914, 556, 129, 76],\n  558: [914, 652, 129, 76],\n  559: [914, 860, 129, 76],\n};\nconst canDo = (subject: number | string, checked: Set<string>, graphData: GraphData) => {\n  subject = subject.toString()\n  if (checked.has(subject)) {\n    return false;\n  }\n  const requirements = graphData.edges.filter((e) => e.to.toString() === subject).map((e) => e.from.toString())\n  return requirements.every((requirement) => checked.has(requirement))\n}\nexport { subjectsRect, canDo };\n","export default __webpack_public_path__ + \"static/media/acercade_correlatividades.ba187615.jpg\";","import React, { useState } from 'react';\nimport './DependencyChart.css'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from './store'\nimport { toggleSubject } from './subjectsStatus'\nimport { getGraphData, GraphData } from './plan'\nimport { subjectsRect, canDo } from './dependencyChartData'\nimport acercade_correlatividades from './acercade_correlatividades.jpg'\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\n\nfunction DependencyChart() {\n  const checked = useSelector((state: RootState) => state.subjectsStatus);\n  const dispatch = useDispatch()\n  const handleClick = (id: string) => {\n    dispatch(toggleSubject(id))\n  }\n  const [graphData, setGraphData] = useState<null | GraphData>(null)\n  useState(() => {\n    (async () => {\n      setGraphData(await getGraphData())\n    })()\n  })\n  const _canDo = (subject: string) => {\n      if (!graphData) {\n        return false;\n      }\n      const defaultEdges = {nodes: [], edges: []}\n      return canDo(subject, checked, graphData || defaultEdges)\n  }\n  return (\n      <div>\n          <h2>Materias aprobadas</h2>\n          <p>Seleccioná qué materias ya aprobaste.</p>\n          <svg viewBox=\"0 0 1406 946\" xmlns=\"http://www.w3.org/2000/svg\">\n              <image href={acercade_correlatividades} width=\"1406\" height=\"946\"/>\n              {Object.entries(subjectsRect).map(([key, value]) => (\n                <rect key={key} x={value[0]} y={value[1]} width={value[2]} height={value[3]} fill={checked.has(key) ? 'red' : _canDo(key) ? 'yellow' : 'transparent'} fillOpacity=\"0.7\" rx=\"10\" ry=\"10\" onClick={() => handleClick(key.toString())} cursor=\"pointer\" />\n              ))}\n          </svg>\n          <Link component={Button} to=\"/\">Anterior</Link>\n          <Link component={Button} to=\"/difficulty\">Siguiente</Link>\n      </div>\n  )\n}\n\nexport default DependencyChart\n","const ACTION_SET_DIFFICULTY = 'set_difficulty'\nconst ACTION_SET_SUBJECTS_PER_CUATRIMESTRE = 'set_subjects_per_cuatrimestre'\n\nexport function subjectsDifficultyReducer(state: number = 80, action: any) {\n  if (typeof state !== typeof undefined && action.type === ACTION_SET_DIFFICULTY) {\n    const {difficulty} = action\n    return difficulty\n  }\n  return state\n}\n\nexport function setDifficulty(difficulty: number) {\n  return {\n    type: ACTION_SET_DIFFICULTY,\n    difficulty,\n  }\n}\n\nexport function subjectsPerCuatrimestreReducer(state: number = 3, action: any) {\n  if (typeof state !== typeof undefined && action.type === ACTION_SET_SUBJECTS_PER_CUATRIMESTRE) {\n    const {subjectsPerCuatrimestre} = action\n    return subjectsPerCuatrimestre\n  }\n  return state\n}\n\nexport function setSubjectsPerCuatrimestre(subjectsPerCuatrimestre: number) {\n  return {\n    type: ACTION_SET_SUBJECTS_PER_CUATRIMESTRE,\n    subjectsPerCuatrimestre,\n  }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setDifficulty, setSubjectsPerCuatrimestre } from './subjectsDifficulty'\nimport { RootState } from './store'\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Link } from \"react-router-dom\";\n\nfunction DifficultyAssessment() {\n  const subjectsDifficulty = useSelector((state: RootState) => state.subjectsDifficulty);\n  const subjectsPerCuatrimestre = useSelector((state: RootState) => state.subjectsPerCuatrimestre);\n\n  const dispatch = useDispatch()\n  const updateDifficulty = (difficulty: number) => {\n    dispatch(setDifficulty(difficulty))\n  }\n  const updateSubjectsPerCuatrimestre = (subjectsPerC: number) => {\n    dispatch(setSubjectsPerCuatrimestre(subjectsPerC))\n  }\n\n  return (\n    <div>\n      <h2>Cuatrimestres para aprobar las materias</h2>\n      <p>Estimar la dificultad de los finales. Aproximá qué porcentaje de finales pensás aprobar. Si pensás aprobar todos sería \"100\", si aprobás 4 de cada 5, \"80\".</p>\n      <div>\n        <FormControl variant=\"outlined\" style={{marginRight: 8}}>\n          <InputLabel htmlFor=\"porcentaje\">Porcentaje</InputLabel>\n          <OutlinedInput\n            required\n            id=\"porcentaje\"\n            style={{width: 90}}\n            labelWidth={80}\n            type=\"number\"\n            value={subjectsDifficulty}\n            error={subjectsDifficulty < 1 || subjectsDifficulty > 100}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => updateDifficulty(parseInt(e.target.value, 10))}\n            />\n        </FormControl>\n        <FormControl variant=\"outlined\">\n          <InputLabel htmlFor=\"materias-por-cuatrimestre\">Finales por cuatrimestre</InputLabel>\n          <Select\n            labelId=\"label-materias-por-cuatrimestre\"\n            id=\"materias-por-cuatrimestre\"\n            value={subjectsPerCuatrimestre}\n            onChange={(e: React.ChangeEvent<{value: unknown}>) => updateSubjectsPerCuatrimestre(e.target.value as number)}\n            labelWidth={180}\n            style={{width: 200}}\n          >\n            <MenuItem value={1}>1</MenuItem>\n            <MenuItem value={2}>2</MenuItem>\n            <MenuItem value={3}>3</MenuItem>\n            <MenuItem value={4}>4</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n      <div>\n        <Link component={Button} to=\"/approved\">Anterior</Link>\n        <Link component={Button} to=\"/recommendation\">Siguiente</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default DifficultyAssessment\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/estimateSubjects.worker.4c71ef61.worker.js\");\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux'\nimport { RootState } from './store'\nimport { getGraphData } from './plan'\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Worker from 'worker-loader!./estimateSubjects.worker';\nimport { Link } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst populationSize = 10;\nconst simulations = 1000;\n\nfunction LinearProgressWithLabel(props: any) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nfunction InscriptionRecommendation() {\n  const subjectsDifficulty: number = useSelector((state: RootState) => state.subjectsDifficulty);\n  const subjectsPerCuatrimestre: number  = useSelector((state: RootState) => state.subjectsPerCuatrimestre);\n  const checked = useSelector((state: RootState) => state.subjectsStatus);\n  const [subjects, setSubjects] = useState<null | { [k: string]: any; }>(null)\n  const [edges, setEdges] = useState<null | { from: number, to: number }[]>(null)\n  const [recommendedSubjects, setRecommendedSubjects] = useState<null | [string, number][]>(null)\n  const [progress, setProgress] = useState<null | number>(null)\n  const [processing, setProcessing] = useState(false)\n\n  const updatePlan = async (subjects: { [k: string]: any; }, edges: { from: number, to: number }[]) => {\n    setProcessing(true)\n    const worker = new Worker();\n    const id = new Date()\n    worker.onmessage = (event) => {\n      if (event.data[0] === `progress_${id}`) {\n        setProgress(event.data[1] * 100)\n        setRecommendedSubjects(event.data[2])\n      }\n      if (event.data[0] === `return_${id}`) {\n        setRecommendedSubjects(event.data[1])\n        setProcessing(false)\n      }\n    }\n    worker.postMessage([\n      id,\n      'estimateSubjectsForNextCuatrimestre',\n      subjects,\n      subjectsDifficulty,\n      checked,\n      edges,\n      subjectsPerCuatrimestre,\n      populationSize,\n      simulations,\n    ])\n  }\n  useState(() => {\n    (async () => {\n      const graphData = await getGraphData()\n      const s = Object.fromEntries(graphData.nodes.sort((e1, e2) => e1.id - e2.id).map((n) => [n.id, n.label]))\n      setSubjects(s)\n      setEdges(graphData.edges)\n      updatePlan(s, graphData.edges)\n    })()\n  })\n  return (\n    <div>\n      <h2>Inscripciones recomendadas</h2>\n      {subjects && edges && !processing && (<div>\n        <Button onClick={() => updatePlan(subjects, edges)}>Probar de nuevo</Button>\n        <Link component={Button} to=\"/\">Volver a empezar</Link>\n      </div>)}\n      {progress !== null && processing && <LinearProgressWithLabel variant=\"determinate\" value={progress} />}\n      {progress && recommendedSubjects && subjects && (\n        <List>\n          {recommendedSubjects.map(([id, quant]) => (\n            <ListItem key={id}>\n              <ListItemText primary={`${subjects[id]} (${new Intl.NumberFormat('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(quant / (progress * simulations) * 10000)}%)`} />\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </div>\n  )\n}\nexport default InscriptionRecommendation\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\n\nfunction Welcome() {\n  return (\n    <div>\n      <h2>Bienvenide</h2>\n      <p>En esta página vamos a tratar de ver en qué materia te conviene anotarte para terminar el Cíclo Profesional de Lic. en Economía en la menor cantidad de cuatrimestes.</p>\n      <p>Functiona a través de hacer simulaciones de reusltados de finales y buscar la mejor variante a través de un <a href=\"https://es.wikipedia.org/wiki/Algoritmo_gen%C3%A9tico\" target=\"_blank\" rel=\"noreferrer\">algoritmo genético.</a></p>\n      <p>No siempre garantiza los mejores resultados, pero es una decente aproximación.</p>\n      <Link component={Button} to=\"/approved\">Empezar</Link>\n    </div>\n  )\n}\nexport default Welcome\n","import { combineReducers } from 'redux'\nimport { subjectsStatusReducer } from './subjectsStatus'\nimport { subjectsDifficultyReducer, subjectsPerCuatrimestreReducer } from './subjectsDifficulty'\nimport { createStore } from 'redux'\n\nlet rootReducer = combineReducers({\n  subjectsStatus: subjectsStatusReducer,\n  subjectsDifficulty: subjectsDifficultyReducer,\n  subjectsPerCuatrimestre: subjectsPerCuatrimestreReducer,\n})\n\nlet store = createStore(rootReducer);\nexport type RootState = ReturnType<typeof store.getState>\nexport default store;\n","import React from 'react';\nimport DependencyChart from './DependencyChart'\nimport DifficultyAssessment from './DifficultyAssessment'\nimport InscriptionRecommendation from './InscriptionRecommendation'\nimport Welcome from './Welcome'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport Container from '@material-ui/core/Container';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Container maxWidth=\"lg\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Welcome />\n              </Route>\n              <Route exact path=\"/approved\">\n                <DependencyChart />\n              </Route>\n              <Route exact path=\"/difficulty\">\n                <DifficultyAssessment />\n              </Route>\n              <Route exact path=\"/recommendation\">\n                <InscriptionRecommendation />\n              </Route>\n            </Switch>\n          </Container>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}